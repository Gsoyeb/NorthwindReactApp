Go to server project:
	Entity Framework Core CLI tools:
		- dotnet tool install --global dotnet-ef

	Ensure that your project includes the EF Core Design package (this gotta be run from server):
		- dotnet add package Microsoft.EntityFrameworkCore.Design

	Restore everything up to date:
		- dotnet restore

	makemigrations (this gotta be run from .Infrastructure as in same place as where applicationdbcontext is declared):
		- dotnet ef migrations add InitialCreate

	migrate:
		- dotnet ef database update

	It is wiser to keep the migrations in the same place as dbcontext so infrastructure:
		builder.Services.AddDbContext<ApplicationDbContext>(options =>
    options.UseSqlServer(
        builder.Configuration.GetConnectionString("DefaultConnection"),
        b => b.MigrationsAssembly("NorthwindReactApp.Infrastructure")));

	Does not work because we missing:
		using Microsoft.EntityFrameworkCore;
        using Microsoft.EntityFrameworkCore.Design;
        using Microsoft.Extensions.Configuration;
        using System.IO;

        namespace NorthwindReactApp.Infrastructure.Data
        {
            public class ApplicationDbContextFactory : IDesignTimeDbContextFactory<ApplicationDbContext>
            {
                public ApplicationDbContext CreateDbContext(string[] args)
                {
                    var configuration = new ConfigurationBuilder()
                        .SetBasePath(Directory.GetCurrentDirectory())
                        .AddJsonFile("appsettings.json")
                        .Build();

                    var optionsBuilder = new DbContextOptionsBuilder<ApplicationDbContext>();
                    var connectionString = configuration.GetConnectionString("DefaultConnection");
                    optionsBuilder.UseNpgsql(connectionString, b => b.MigrationsAssembly("NorthwindReactApp.Infrastructure"));

                    return new ApplicationDbContext(optionsBuilder.Options);
                }
            }
        }